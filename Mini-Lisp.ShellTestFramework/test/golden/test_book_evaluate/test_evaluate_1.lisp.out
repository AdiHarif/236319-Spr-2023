T
X
T
NIL
X
X
(X.Y)
NIL
(Y Z)
NIL
Y
(X.Y)
(X.X)
T
NIL
T
Y
NIL
NIL
T
T
A
B
T
NIL
NIL
Traceback (most recent call last):
	From function EVALUATE:
		Args: ((ERROR) ((T.T) (NIL)))
	From function COND:
		Args: (((ATOM S-EXPRESSION) (LOOKUP S-EXPRESSION A-LIST)) ((IS-ATOMIC (CAR S-EXPRESSION)) (EVALUATE-ATOMIC S-EXPRESSION A-LIST)) (T (APPLY (EVALUATE (CAR S-EXPRESSION) A-LIST) (CDR S-EXPRESSION) A-LIST)))
	From function EVALUATE-ATOMIC:
		Args: ((ERROR) ((T.T) (NIL)))
	From function APPLY-ATOMIC:
		Args: (ERROR NIL ((T.T) (NIL)))
	From function COND:
		Args: (((EQ (QUOTE COND) ATOMIC) (EVALUATE-COND ACTUALS A-LIST)) (T (APPLY-EAGER-ATOMIC ATOMIC (EVALUATE-LIST ACTUALS A-LIST) A-LIST)))
	From function APPLY-EAGER-ATOMIC:
		Args: (ERROR NIL ((T.T) (NIL)))
	From function COND:
		Args: (((EQ ATOMIC (QUOTE ERROR)) (ERROR ACTUALS)) ((EQ ATOMIC (QUOTE EVAL)) (EVALUATE (CAR ACTUALS) A-LIST)) ((NULL (CDR ACTUALS)) (APPLY-TRIVIAL-ATOMIC ATOMIC (CAR ACTUALS) NIL)) (T (APPLY-TRIVIAL-ATOMIC ATOMIC (CAR ACTUALS) (CAR (CDR ACTUALS)))))
	From function ERROR:
		Args: NIL
Error [NIL] in (ERROR ACTUALS)
Traceback (most recent call last):
	From function EVALUATE:
		Args: ((ERROR A) ((A.MY_ERR) (T.T) (NIL)))
	From function COND:
		Args: (((ATOM S-EXPRESSION) (LOOKUP S-EXPRESSION A-LIST)) ((IS-ATOMIC (CAR S-EXPRESSION)) (EVALUATE-ATOMIC S-EXPRESSION A-LIST)) (T (APPLY (EVALUATE (CAR S-EXPRESSION) A-LIST) (CDR S-EXPRESSION) A-LIST)))
	From function EVALUATE-ATOMIC:
		Args: ((ERROR A) ((A.MY_ERR) (T.T) (NIL)))
	From function APPLY-ATOMIC:
		Args: (ERROR (A) ((A.MY_ERR) (T.T) (NIL)))
	From function COND:
		Args: (((EQ (QUOTE COND) ATOMIC) (EVALUATE-COND ACTUALS A-LIST)) (T (APPLY-EAGER-ATOMIC ATOMIC (EVALUATE-LIST ACTUALS A-LIST) A-LIST)))
	From function APPLY-EAGER-ATOMIC:
		Args: (ERROR (MY_ERR) ((A.MY_ERR) (T.T) (NIL)))
	From function COND:
		Args: (((EQ ATOMIC (QUOTE ERROR)) (ERROR ACTUALS)) ((EQ ATOMIC (QUOTE EVAL)) (EVALUATE (CAR ACTUALS) A-LIST)) ((NULL (CDR ACTUALS)) (APPLY-TRIVIAL-ATOMIC ATOMIC (CAR ACTUALS) NIL)) (T (APPLY-TRIVIAL-ATOMIC ATOMIC (CAR ACTUALS) (CAR (CDR ACTUALS)))))
	From function ERROR:
		Args: (MY_ERR)
Error [(MY_ERR)] in (ERROR ACTUALS)
Traceback (most recent call last):
	From function EVALUATE:
		Args: ((BLA) ((T.T) (NIL)))
	From function COND:
		Args: (((ATOM S-EXPRESSION) (LOOKUP S-EXPRESSION A-LIST)) ((IS-ATOMIC (CAR S-EXPRESSION)) (EVALUATE-ATOMIC S-EXPRESSION A-LIST)) (T (APPLY (EVALUATE (CAR S-EXPRESSION) A-LIST) (CDR S-EXPRESSION) A-LIST)))
	From function APPLY:
		Args: ((EVALUATE (CAR S-EXPRESSION) A-LIST) (CDR S-EXPRESSION) A-LIST)
	From function EVALUATE:
		Args: (BLA ((T.T) (NIL)))
	From function COND:
		Args: (((ATOM S-EXPRESSION) (LOOKUP S-EXPRESSION A-LIST)) ((IS-ATOMIC (CAR S-EXPRESSION)) (EVALUATE-ATOMIC S-EXPRESSION A-LIST)) (T (APPLY (EVALUATE (CAR S-EXPRESSION) A-LIST) (CDR S-EXPRESSION) A-LIST)))
	From function LOOKUP:
		Args: (BLA ((T.T) (NIL)))
	From function COND:
		Args: (((NULL A-LIST) (ERROR UNDEFINED ID)) ((EQ ID (CAR (CAR A-LIST))) (CDR (CAR A-LIST))) (T (LOOKUP ID (CDR A-LIST))))
	From function LOOKUP:
		Args: (BLA ((NIL)))
	From function COND:
		Args: (((NULL A-LIST) (ERROR UNDEFINED ID)) ((EQ ID (CAR (CAR A-LIST))) (CDR (CAR A-LIST))) (T (LOOKUP ID (CDR A-LIST))))
	From function LOOKUP:
		Args: (BLA NIL)
	From function COND:
		Args: (((NULL A-LIST) (ERROR UNDEFINED ID)) ((EQ ID (CAR (CAR A-LIST))) (CDR (CAR A-LIST))) (T (LOOKUP ID (CDR A-LIST))))
	From function ERROR:
		Args: UNDEFINED
Error [UNDEFINED] in UNDEFINED
Traceback (most recent call last):
	From function EVALUATE:
		Args: ((NIL NIL) ((T.T) (NIL)))
	From function COND:
		Args: (((ATOM S-EXPRESSION) (LOOKUP S-EXPRESSION A-LIST)) ((IS-ATOMIC (CAR S-EXPRESSION)) (EVALUATE-ATOMIC S-EXPRESSION A-LIST)) (T (APPLY (EVALUATE (CAR S-EXPRESSION) A-LIST) (CDR S-EXPRESSION) A-LIST)))
	From function APPLY:
		Args: (NIL (NIL) ((T.T) (NIL)))
	From function APPLY-DECOMPOSED-LAMBDA:
		Args: ((CAR LAMBDA-EXPRESSION) (CAR (CDR LAMBDA-EXPRESSION)) (CAR (CDR (CDR LAMBDA-EXPRESSION))) ACTUALS A-LIST)
	From function CAR:
		Args: NIL
Error [CAR] in NIL
