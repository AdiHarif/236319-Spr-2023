; =================================================
; Evaluate - apply: lambda/nlambda functions - Part 1
; =================================================
; -------------------------------------------------------
; ID:
(evaluate '(id a) '(id.(lambda (x) x) a.t t.t nil.nil))     ; T     - arg evaluation
(evaluate '(id a) '(id.(lambda (x) x) a.(a b) t.t nil.nil)) ; (A B) - arg evaluation

; -------------------------------------------------------
; QUOTE:
(evaluate '(quote a) '(quote.(nlambda (x) x) a.t t.t nil.nil))  ; A
(evaluate '(quote bla) '(quote.(nlambda (x) x) t.t nil.nil))    ; bla

; -------------------------------------------------------
; FIRST_3 function: (lambda/nlambda)
(evaluate '(first a b c) '(first.(nlambda (x y z) x) t.t nil.nil)) ; a
(evaluate '(first a b c) '(first.(lambda (x y z) x) a.a b.b c.c t.t nil.nil)) ; a

; -------------------------------------------------------
; LAST_3 function: (lambda/nlambda)
(evaluate '(last a b c) '(last.(nlambda (x y z) z) t.t nil.nil)) ; c
(evaluate '(last a b c) '(last.(lambda (x y z) z) a.a b.b c.c t.t nil.nil)) ; c
