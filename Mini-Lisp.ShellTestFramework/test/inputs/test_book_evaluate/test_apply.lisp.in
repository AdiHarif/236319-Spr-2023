; =================================================
; apply:
; =================================================
(apply (nlambda (x) x) '(a) '(a.a nil.nil t.t)) ; QUOTE function
(apply (nlambda (x y) y) '(a b) '(a.a b.b c.c nil.nil t.t))
(apply (nlambda (x y z) z) '(a b c) '(a.a b.b c.c nil.nil t.t))
(apply (lambda (x) x) '(a) '(a.a b.b c.c nil.nil t.t)) ; ID function
(apply (lambda (x y) y) '(a b) '(a.a b.b c.c nil.nil t.t))
(apply (lambda (x y z) z) '(a b c) '(a.a b.b c.c nil.nil t.t))
(apply (lambda (x) x) '(a) '(a.a b.b c.c nil.nil t.t))
(apply (lambda (x y) y) '(a b) '(a.a b.b c.c nil.nil t.t))
(apply (lambda (x y z) z) '(a b c) '(a.a b.b c.c nil.nil t.t))

; =================================================
; apply - functions which calls other functions:
; =================================================
; -------------------------------------------------------
; Car function:
(apply (lambda (x) (car x)) '(a) '(a.(a b) t.t nil.nil)) ; A

; Car function - normal eval:
(apply (nlambda (x) (car x)) '((a b)) '(t.t nil.nil)) ; A

; -------------------------------------------------------
; Cdr function:
(apply (lambda (x) (cdr x)) '(a) '(a.(a b) t.t nil.nil)) ; (B)

; Cdr function - normal eval:
(apply (nlambda (x) (cdr x)) '((a b)) '(t.t nil.nil)) ; (B)

; -------------------------------------------------------
; MIRROR function:
(apply (lambda (x) (cons (cdr x) (car x))) '(a) '(a.(a b) t.t nil.nil)) ; (b a)

; MIRROR function - normal eval:
(apply (nlambda (x) (cons (cdr x) (car x))) '((a b)) '(t.t nil.nil)) ; (b a)

; -------------------------------------------------------
; ZCAR function:
(apply (nlambda (x) (cond ((atom x) x) (t (car x)))) '(a) '(a.a t.t nil.nil))      ; a
(apply (nlambda (x) (cond ((atom x) x) (t (car x)))) '(a) '(a.(a b) t.t nil.nil))  ; a

; ZCAR function - normal eval:
(apply (nlambda (x) (cond ((atom x) x) (t (car x)))) '((a b)) '(t.t nil.nil)) ; a
(apply (nlambda (x) (cond ((atom x) x) (t (car x)))) '((a)) '(t.t nil.nil)) ; a

; =================================================
; apply - Missing actuals error:
; =================================================
(apply (lambda (x y) y) '(a) '(a.a b.b c.c nil.nil t.t))
(apply (lambda (x y z) y) '(a b) '(a.a b.b c.c nil.nil t.t))

; =================================================
; apply - Missing formals error:
; =================================================
(apply (lambda (x) y) '(a b) '(a.a b.b c.c nil.nil t.t))
(apply (lambda (x y) y) '(a b c) '(a.a b.b c.c nil.nil t.t))

; =================================================
; apply - Unknown name:
; =================================================
(apply (dlambda (x) y) '(a b) '(a.a b.b c.c nil.nil t.t))
